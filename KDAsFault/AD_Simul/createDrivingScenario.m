function [scenario, waypoints, egoVehicle] = createDrivingScenario(speed, data, roadWidth)
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Generated by MATLAB(R) 9.9 (R2020b) and Automated Driving Toolbox 3.2 (R2020b).
% Generated on: 18-Nov-2020 02:02:26

% Construct a drivingScenario object.
scenario = drivingScenario('SampleTime', 0.1);
laneSpecification = lanespec(1, 'Width', roadWidth);
% Add all road segments
%roadCenters
%data(1, 1)


%class(data(1, 1))
%if isa(data(1, 1),'char')
%{
    road_num = str2double(data(1, 1));
    %disp(road_num)
    for i = 1:road_num
        road_point_num = str2double(data(3 * (i - 1) + 2, 1));
        road_centers = [];
        for j = 1:road_point_num     
            x_axis = str2double(data(3 * (i - 1) + 3, j));
            y_axis = str2double(data(3 * (i - 1) + 4, j));
            %z_axis = data(4 * (i - 1) + 5, j);
            z_axis = 0;
            road_centers = [road_centers ; x_axis y_axis z_axis];
        end
        road_name = ['road ', num2str(i)];
        road(scenario, road_centers, 'Name', road_name, 'lanes', laneSpecification);
        %road(scenario, road_centers, roadWidth)
    end
    %plot(scenario,'RoadCenters','on');
    %laneSpecification = lanespec(1);
    %road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');
    %road(scenario, roadCenters, roadWidth, 'Name', 'Road');

    % Add the ego vehicle

    egoVehicle = vehicle(scenario, ...
        'ClassID', 1, ...
        'FrontOverhang', 0.9, ...
        'Position', [str2double(data(3 * road_num + 3, 1)) str2double(data(3 * road_num + 4, 1)) 0]);

    %waypoints
        way_point_num = str2double(data(3 * road_num + 2, 1));
        waypoints = [];
        for i = 1:way_point_num     
            x_axis = str2double(data(3 * road_num + 3, i));
            y_axis = str2double(data(3 * road_num + 4, i));
            %z_axis = data(4 * road_num + 5, i);
            z_axis = 0;
            waypoints = [waypoints ; x_axis y_axis z_axis];
        end
    
else
%}
    road_num = data(1, 1);
    %disp(road_num)
    for i = 1:road_num
        road_point_num = data(3 * (i - 1) + 2, 1);
        road_centers = [];
        for j = 1:road_point_num     
            x_axis = data(3 * (i - 1) + 3, j);
            y_axis = data(3 * (i - 1) + 4, j);
            %z_axis = data(4 * (i - 1) + 5, j);
            z_axis = 0;
            road_centers = [road_centers ; x_axis y_axis z_axis];
        end
        road_name = ['road ', num2str(i)];
        road(scenario, road_centers, 'Name', road_name, 'lanes', laneSpecification);
        %road(scenario, road_centers, roadWidth)
    end
    %plot(scenario,'RoadCenters','on');
    %laneSpecification = lanespec(1);
    %road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');
    %road(scenario, roadCenters, roadWidth, 'Name', 'Road');

    % Add the ego vehicle

    egoVehicle = vehicle(scenario, ...
        'ClassID', 1, ...
        'FrontOverhang', 0.9, ...
        'Position', [data(3 * road_num + 3, 1) data(3 * road_num + 4, 1) 0]);

    %waypoints
        way_point_num = data(3 * road_num + 2, 1);
        waypoints = [];
        for i = 1:way_point_num     
            x_axis = data(3 * road_num + 3, i);
            y_axis = data(3 * road_num + 4, i);
            %z_axis = data(4 * road_num + 5, i);
            z_axis = 0;
            waypoints = [waypoints ; x_axis y_axis z_axis];
        end
%end
        
trajectory(egoVehicle, waypoints, speed);

